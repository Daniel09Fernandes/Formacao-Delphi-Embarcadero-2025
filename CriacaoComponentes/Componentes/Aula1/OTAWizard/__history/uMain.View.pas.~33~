unit uMain.View;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,
  Vcl.Controls, Vcl.ExtCtrls,   SyntaxHighlighter,
  Dinos.Bridge.GPT.Open.IA, Vcl.ComCtrls;

type
  TFrTextInteraction = class(TForm)
    Panel2: TPanel;
    Panel3: TPanel;
    Label1: TLabel;
    MmoGPT: TRichEdit;
    TextMe: TRichEdit;
    Label2: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure TextMeKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
  private
    FDinosGPT: TDinosChatGPT;
    FSyntaxHighlighter: TDelphiSyntaxHighlighter;
  public

    class procedure New(AOwner: TComponent);
    class procedure FreeMemory;


    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
  end;

var
  FrTextInteraction: TFrTextInteraction;

implementation

{$R *.dfm}

procedure TFrTextInteraction.Button1Click(Sender: TObject);
begin
  Close;
end;

procedure TFrTextInteraction.Button2Click(Sender: TObject);
begin
  MmoGPT.Lines.Clear;
end;

procedure TFrTextInteraction.Button3Click(Sender: TObject);
begin
  TextMe.Lines.Clear;
end;

constructor TFrTextInteraction.Create(AOwner: TComponent);
begin
  inherited;
  FDinosGPT := TDinosChatGPT.Create;
end;

destructor TFrTextInteraction.Destroy;
begin
  FreeAndNil(FDinosGPT);
  inherited;
end;

procedure TFrTextInteraction.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree;
end;

class procedure TFrTextInteraction.FreeMemory;
begin
  if Assigned(FrTextInteraction) then
    FreeAndNil(FrTextInteraction);
end;

class procedure TFrTextInteraction.New(AOwner: TComponent);
begin
  FrTextInteraction := TFrTextInteraction.Create(AOwner);
  FrTextInteraction.Parent := TWinControl(AOwner);
  FrTextInteraction.Show;
end;

procedure TFrTextInteraction.TextMeKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
   if Key = VK_RETURN then
   begin
     MmoGPT.Lines.add('');
     MmoGPT.Lines.add('');

     MmoGPT.Lines.Add(
         FDinosGPT.SendMessage(TextMe.Lines.text)
       );


     TextMe.Lines.Clear;
   end;
end;

end.
